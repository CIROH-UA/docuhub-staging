"use strict";(self.webpackChunkciroh_docuhub=self.webpackChunkciroh_docuhub||[]).push([["5616"],{97327:function(e,t,s){s.r(t),s.d(t,{default:()=>g});var a=s(74848);s(96540);var r=s(39836),l=s(99727),n=s(16364),c=s(19347),i=s(23624),o=s(10500),h=s(60782);function u({title:e}){return(0,a.jsxs)(a.Fragment,{children:[(0,a.jsx)(l.be,{title:e}),(0,a.jsx)(o.A,{tag:"doc_tags_list"})]})}function d({tags:e,title:t}){return(0,a.jsx)(l.e3,{className:(0,r.A)(n.G.page.docsTagsListPage),children:(0,a.jsx)("div",{className:"container margin-vert--lg",children:(0,a.jsx)("div",{className:"row",children:(0,a.jsxs)("main",{className:"col col--8 col--offset-2",children:[(0,a.jsx)(h.A,{as:"h1",children:t}),(0,a.jsx)(i.A,{tags:e})]})})})})}function g(e){let t=(0,c.b)();return(0,a.jsxs)(a.Fragment,{children:[(0,a.jsx)(u,{...e,title:t}),(0,a.jsx)(d,{...e,title:t})]})}},57298:function(e,t,s){s.d(t,{A:()=>n});var a=s(74848);s(96540);var r=s(39836),l=s(12801);function n({permalink:e,label:t,count:s,description:n}){return(0,a.jsxs)(l.A,{rel:"tag",href:e,title:n,className:(0,r.A)("tag_zVej",s?"tagWithCount_h2kH":"tagRegular_sFm0"),children:[t,s&&(0,a.jsx)("span",{children:s})]})}},23624:function(e,t,s){s.d(t,{A:()=>i});var a=s(74848);s(96540);var r=s(19347),l=s(57298),n=s(60782);function c({letterEntry:e}){return(0,a.jsxs)("article",{children:[(0,a.jsx)(n.A,{as:"h2",id:e.letter,children:e.letter}),(0,a.jsx)("ul",{className:"padding--none",children:e.tags.map(e=>(0,a.jsx)("li",{className:"tag_Nnez",children:(0,a.jsx)(l.A,{...e})},e.permalink))}),(0,a.jsx)("hr",{})]})}function i({tags:e}){let t=(0,r.Q)(e);return(0,a.jsx)("section",{className:"margin-vert--lg",children:t.map(e=>(0,a.jsx)(c,{letterEntry:e},e.letter))})}},19347:function(e,t,s){s.d(t,{Q:()=>l,b:()=>r});var a=s(43789);let r=()=>(0,a.T)({id:"theme.tags.tagsPageTitle",message:"Tags",description:"The title of the tag list page"});function l(e){let t={};return Object.values(e).forEach(e=>{let s=e.label[0].toUpperCase();t[s]??=[],t[s].push(e)}),Object.entries(t).sort(([e],[t])=>e.localeCompare(t)).map(([e,t])=>({letter:e,tags:t.sort((e,t)=>e.label.localeCompare(t.label))}))}}}]);